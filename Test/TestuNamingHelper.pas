unit TestuNamingHelper;
{

  Delphi DUnit Test Case
  ----------------------
  This unit contains a skeleton test case class generated by the Test Case Wizard.
  Modify the generated code to correctly setup and call the methods from the unit 
  being tested.

}

interface

uses
  TestFramework, System.Rtti, System.SysUtils, System.RegularExpressions,
  uNamingHelper, System.StrUtils, System.Classes;

type
  // Test methods for class TNamingHelper

  TestTNamingHelper = class(TTestCase)
  strict private
    FNamingHelper: TNamingHelper;
  public
    procedure SetUp; override;
    procedure TearDown; override;
  published
    procedure TestTableNameToClassName;
    procedure TestTableNameToInterfaceName;
    procedure TestTableNameToObjectName;
  end;

implementation

uses
  Data.DB, Uni;

procedure TestTNamingHelper.SetUp;
begin
  FNamingHelper := TNamingHelper.Create('', [TUniQuery]);
end;

procedure TestTNamingHelper.TearDown;
begin
  FNamingHelper.Free;
  FNamingHelper := nil;
end;

procedure TestTNamingHelper.TestTableNameToClassName;
var
  ReturnValue: string;
  ATableName: string;
begin
  ATableName := 'SomeTable';
  ReturnValue := FNamingHelper.TableNameToClassName(ATableName);
  CheckEquals(ReturnValue, 'T' + ATableName);
end;

procedure TestTNamingHelper.TestTableNameToInterfaceName;
var
  ReturnValue: string;
  ATableName: string;
begin
  ATableName := 'SomeTable';
  ReturnValue := FNamingHelper.TableNameToInterfaceName(ATableName);
  CheckEquals(ReturnValue, 'I' + ATableName);

  ATableName := 'Unit';
  ReturnValue := FNamingHelper.TableNameToInterfaceName(ATableName);
  CheckEquals(ReturnValue, 'I' + ATableName + '_');
end;

procedure TestTNamingHelper.TestTableNameToObjectName;
var
  ReturnValue: string;
  ATableName: string;
begin
  ATableName := 'SomeTable';
  ReturnValue := FNamingHelper.TableNameToObjectName(ATableName);
  CheckEquals(ReturnValue, ATableName);

  ATableName := 'Some Table';
  ReturnValue := FNamingHelper.TableNameToObjectName(ATableName);
  CheckEquals(ReturnValue, 'Some_Table');

  ATableName := 'Unit';
  ReturnValue := FNamingHelper.TableNameToObjectName(ATableName);
  CheckEquals(ReturnValue, ATableName + '_');

  ATableName := 'TComponent';
  ReturnValue := FNamingHelper.TableNameToObjectName(ATableName);
  CheckEquals(ReturnValue, ATableName + '_');
end;

initialization
  // Register any test cases with the test runner
  RegisterTest(TestTNamingHelper.Suite);
end.

